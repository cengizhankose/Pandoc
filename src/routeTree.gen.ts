/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const WriteStoryLazyImport = createFileRoute('/write-story')()
const ShowsLazyImport = createFileRoute('/shows')()
const MyListLazyImport = createFileRoute('/my-list')()
const MoviesLazyImport = createFileRoute('/movies')()
const HomepageLazyImport = createFileRoute('/homepage')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const WriteStoryLazyRoute = WriteStoryLazyImport.update({
  id: '/write-story',
  path: '/write-story',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/write-story.lazy').then((d) => d.Route))

const ShowsLazyRoute = ShowsLazyImport.update({
  id: '/shows',
  path: '/shows',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/shows.lazy').then((d) => d.Route))

const MyListLazyRoute = MyListLazyImport.update({
  id: '/my-list',
  path: '/my-list',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/my-list.lazy').then((d) => d.Route))

const MoviesLazyRoute = MoviesLazyImport.update({
  id: '/movies',
  path: '/movies',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/movies.lazy').then((d) => d.Route))

const HomepageLazyRoute = HomepageLazyImport.update({
  id: '/homepage',
  path: '/homepage',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/homepage.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/homepage': {
      id: '/homepage'
      path: '/homepage'
      fullPath: '/homepage'
      preLoaderRoute: typeof HomepageLazyImport
      parentRoute: typeof rootRoute
    }
    '/movies': {
      id: '/movies'
      path: '/movies'
      fullPath: '/movies'
      preLoaderRoute: typeof MoviesLazyImport
      parentRoute: typeof rootRoute
    }
    '/my-list': {
      id: '/my-list'
      path: '/my-list'
      fullPath: '/my-list'
      preLoaderRoute: typeof MyListLazyImport
      parentRoute: typeof rootRoute
    }
    '/shows': {
      id: '/shows'
      path: '/shows'
      fullPath: '/shows'
      preLoaderRoute: typeof ShowsLazyImport
      parentRoute: typeof rootRoute
    }
    '/write-story': {
      id: '/write-story'
      path: '/write-story'
      fullPath: '/write-story'
      preLoaderRoute: typeof WriteStoryLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/homepage': typeof HomepageLazyRoute
  '/movies': typeof MoviesLazyRoute
  '/my-list': typeof MyListLazyRoute
  '/shows': typeof ShowsLazyRoute
  '/write-story': typeof WriteStoryLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/homepage': typeof HomepageLazyRoute
  '/movies': typeof MoviesLazyRoute
  '/my-list': typeof MyListLazyRoute
  '/shows': typeof ShowsLazyRoute
  '/write-story': typeof WriteStoryLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/homepage': typeof HomepageLazyRoute
  '/movies': typeof MoviesLazyRoute
  '/my-list': typeof MyListLazyRoute
  '/shows': typeof ShowsLazyRoute
  '/write-story': typeof WriteStoryLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/homepage'
    | '/movies'
    | '/my-list'
    | '/shows'
    | '/write-story'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/homepage' | '/movies' | '/my-list' | '/shows' | '/write-story'
  id:
    | '__root__'
    | '/'
    | '/homepage'
    | '/movies'
    | '/my-list'
    | '/shows'
    | '/write-story'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  HomepageLazyRoute: typeof HomepageLazyRoute
  MoviesLazyRoute: typeof MoviesLazyRoute
  MyListLazyRoute: typeof MyListLazyRoute
  ShowsLazyRoute: typeof ShowsLazyRoute
  WriteStoryLazyRoute: typeof WriteStoryLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  HomepageLazyRoute: HomepageLazyRoute,
  MoviesLazyRoute: MoviesLazyRoute,
  MyListLazyRoute: MyListLazyRoute,
  ShowsLazyRoute: ShowsLazyRoute,
  WriteStoryLazyRoute: WriteStoryLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/homepage",
        "/movies",
        "/my-list",
        "/shows",
        "/write-story"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/homepage": {
      "filePath": "homepage.lazy.tsx"
    },
    "/movies": {
      "filePath": "movies.lazy.tsx"
    },
    "/my-list": {
      "filePath": "my-list.lazy.tsx"
    },
    "/shows": {
      "filePath": "shows.lazy.tsx"
    },
    "/write-story": {
      "filePath": "write-story.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
